name: Android Emulator Setup and Validation for Appium

on:
 push:
   branches:
     - main

jobs:
 android-setup:
   runs-on: ubuntu-latest
   timeout-minutes: 45

   steps:
     - name: Checkout Repository
       uses: actions/checkout@v3

     - name: System Diagnostics
       run: |
         echo "Node.js version:"
         node --version
         echo "NPM version:"
         npm --version
         echo "Memory Status:"
         free -h

     - name: Install Dependencies
       run: |
         sudo apt-get update
         sudo apt-get install -y openjdk-11-jdk unzip wget curl lsof net-tools android-tools-adb
         sudo apt-get clean

     - name: Set up Node.js
       uses: actions/setup-node@v3
       with:
         node-version: 18
         cache: 'npm'

     - name: Download APK
       run: |
         mkdir -p ./apps
         wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 10 -O ./apps/gfa22112024.apk https://appsreservamos2024r1.s3.us-east-2.amazonaws.com/gfa22112024.apk
         ls -l ./apps/gfa22112024.apk

     - name: Setup Android SDK
       run: |
         mkdir -p "$HOME/android-sdk/cmdline-tools"
         wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
         unzip -q commandlinetools-linux-9477386_latest.zip -d "$HOME/android-sdk/cmdline-tools"
         mv "$HOME/android-sdk/cmdline-tools/cmdline-tools" "$HOME/android-sdk/cmdline-tools/latest"
         
         # Variables de entorno
         echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
         echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV
         
         # Aplicar variables inmediatamente
         export ANDROID_HOME=$HOME/android-sdk
         export PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH
         
         # Verificar instalación
         ls -la $HOME/android-sdk/cmdline-tools/latest/bin/

     - name: Install Android SDK Components
       run: |
         export ANDROID_HOME=$HOME/android-sdk
         export PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH
         
         # Aceptar licencias
         yes | sdkmanager --licenses
         
         # Instalar componentes
         sdkmanager --install \
           "platform-tools" \
           "platforms;android-30" \
           "system-images;android-30;google_apis;x86_64" \
           "build-tools;30.0.3"
           
         # Verificar instalación
         sdkmanager --list_installed

     - name: Create and Start Android Emulator
       run: |
         export ANDROID_HOME=$HOME/android-sdk
         export PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH
         
         # Crear AVD
         echo "no" | avdmanager create avd \
           -n test \
           -k "system-images;android-30;google_apis;x86_64" \
           --force \
           --device "pixel_5"
           
         # Iniciar emulador
         $ANDROID_HOME/emulator/emulator \
           -avd test \
           -no-audio \
           -no-window \
           -gpu swiftshader_indirect \
           -no-snapshot \
           -no-boot-anim \
           > emulator.log 2>&1 &
           
         # Esperar inicio
         sleep 30

     - name: Wait for Emulator Boot
       run: |
         max_attempts=30
         attempt=0
         
         while [ $attempt -lt $max_attempts ]; do
           if adb shell getprop sys.boot_completed 2>&1 | grep -q '1'; then
             echo "Emulator booted successfully"
             adb devices -l
             break
           fi
           echo "Waiting for emulator... Attempt $((attempt+1))/$max_attempts"
           sleep 10
           attempt=$((attempt+1))
         done

     - name: Install and Configure Appium
       run: |
         npm install -g appium@next
         appium driver install uiautomator2
         
         mkdir -p logs
         appium \
           --relaxed-security \
           --base-path "/wd/hub" \
           --log-level debug \
           > logs/appium.log 2>&1 &
           
         sleep 10
         curl --retry 5 --retry-delay 2 http://127.0.0.1:4723/wd/hub/status

     - name: Run E2E Tests
       run: |
         adb devices -l
         ps aux | grep appium
         BRAND=gfa npm run wdio

     - name: Upload Logs
       if: always()
       uses: actions/upload-artifact@v3
       with:
         name: test-logs
         path: |
           logs/
           emulator.log
           ~/.android/avd/