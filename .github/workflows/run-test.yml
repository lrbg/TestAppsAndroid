name: Android Emulator Setup and Validation for Appium

on:
  push:
    branches:
      - main

jobs:
  android-setup:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: System Diagnostics
        run: |
          echo "Node.js version:"
          node --version
          echo "NPM version:"
          npm --version
          echo "Memory Status:"
          free -h

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk unzip wget curl lsof net-tools android-tools-adb
          sudo apt-get clean

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      # Configuraci贸n mejorada de Android SDK
      - name: Setup Android SDK
        run: |
          # Crear directorios necesarios
          mkdir -p "$HOME/android-sdk/cmdline-tools"
          cd "$HOME/android-sdk/cmdline-tools"

          # Descargar y extraer Android Command Line Tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-9477386_latest.zip
          mv cmdline-tools latest

          # Configurar variables de entorno
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$HOME/android-sdk/emulator:$PATH" >> $GITHUB_ENV

          # Verificar la instalaci贸n
          ls -la $HOME/android-sdk/cmdline-tools/latest/bin/

      # Configuraci贸n de Android SDK Components
      - name: Install Android SDK Components
        run: |
          # Verificar variables de entorno
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "PATH: $PATH"
          
          # Aceptar licencias
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
          
          # Instalar componentes necesarios
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "platforms;android-30" \
            "system-images;android-30;google_apis;x86_64" \
            "build-tools;30.0.3"

          # Verificar instalaci贸n
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list_installed

      - name: Create and Start Android Emulator
        run: |
          # Verificar entorno
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "Current directory: $(pwd)"
          echo "Available system images:"
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list | grep system-images

          # Crear AVD
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
            -n test \
            -k "system-images;android-30;google_apis;x86_64" \
            --force \
            --device "pixel_5"

          # Verificar AVD creado
          $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list avd

          # Iniciar emulador
          nohup $ANDROID_HOME/emulator/emulator \
            -avd test \
            -no-audio \
            -no-window \
            -gpu swiftshader_indirect \
            -no-snapshot \
            -noaudio \
            -no-boot-anim \
            > emulator.log 2>&1 &

          # Esperar que inicie
          sleep 30

      - name: Wait for Emulator Boot
        run: |
          max_attempts=30
          attempt=0
          
          while [ $attempt -lt $max_attempts ]; do
            if adb shell getprop sys.boot_completed 2>&1 | grep -q '1'; then
              echo "Emulator booted successfully"
              adb devices -l
              break
            fi
            echo "Waiting for emulator... Attempt $((attempt+1))/$max_attempts"
            sleep 10
            attempt=$((attempt+1))
          done

      - name: Install and Configure Appium
        run: |
          npm install -g appium@next
          appium driver install uiautomator2
          
          # Iniciar Appium
          mkdir -p logs
          nohup appium \
            --relaxed-security \
            --base-path "/wd/hub" \
            --log-level debug \
            > logs/appium.log 2>&1 &
            
          # Esperar que Appium inicie
          sleep 10
          
          # Verificar estado
          curl --retry 5 --retry-delay 2 http://127.0.0.1:4723/wd/hub/status

      - name: Run E2E Tests
        run: |
          # Verificar estado del entorno
          adb devices -l
          ps aux | grep appium
          
          # Ejecutar pruebas
          BRAND=gfa npm run wdio

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: |
            logs/
            emulator.log
            ~/.android/avd/