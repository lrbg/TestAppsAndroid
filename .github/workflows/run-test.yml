name: Android Appium Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: |
        npm install -g appium
        npm ci

    - name: Set up Android SDK
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk wget unzip
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        mkdir -p $HOME/android-sdk/cmdline-tools
        unzip -q commandlinetools-linux-9477386_latest.zip -d $HOME/android-sdk/cmdline-tools
        mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH
        yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
        sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "emulator" "system-images;android-31;default;x86_64"

    - name: Start Android Emulator
      run: |
        echo "no" | avdmanager create avd -n test -k "system-images;android-31;default;x86_64" --device "pixel_5"
        $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &
        adb wait-for-device
        adb shell settings put global window_animation_scale 0
        adb shell settings put global transition_animation_scale 0
        adb shell settings put global animator_duration_scale 0

    - name: Start Appium Server
      run: |
        nohup appium --relaxed-security --base-path "/wd/hub" &
        sleep 10

    - name: Run Tests
      run: BRAND=gfa npm run wdio

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ./test-results/
