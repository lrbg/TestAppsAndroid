name: Android Emulator Setup and Validation for Appium

on:
 push:
   branches:
     - main

jobs:
 android-setup:
   runs-on: ubuntu-latest
   timeout-minutes: 60

   steps:
     - name: Checkout Repository
       uses: actions/checkout@v3

     - name: Install Dependencies
       run: |
         sudo apt-get update
         sudo apt-get install -y openjdk-11-jdk unzip wget curl android-tools-adb

     - name: Set up Node.js
       uses: actions/setup-node@v3
       with:
         node-version: 18

     - name: Setup Android SDK
       run: |
         mkdir -p "$HOME/android-sdk/cmdline-tools"
         cd "$HOME/android-sdk/cmdline-tools"
         
         # Descargar y extraer
         wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
         unzip -q commandlinetools-linux-9477386_latest.zip
         
         # Organizar directorios correctamente
         mkdir -p latest
         mv cmdline-tools/* latest/
         rmdir cmdline-tools
         
         # Variables de entorno
         echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
         echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV
         
         # Verificar estructura
         ls -la "$HOME/android-sdk/cmdline-tools/latest/bin"

     - name: Install Android Tools
       run: |
         yes | sdkmanager --licenses > /dev/null
         sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"
         sdkmanager "system-images;android-30;google_apis;x86_64"
         
         echo "Verificando instalaciÃ³n:"
         sdkmanager --list_installed

     - name: Create and Boot Emulator
       timeout-minutes: 15
       run: |
         echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" --force

         echo "Iniciando emulador..."
         nohup $ANDROID_HOME/emulator/emulator \
           -avd test \
           -no-audio \
           -no-window \
           -gpu swiftshader_indirect \
           -no-snapshot \
           -camera-back none \
           -camera-front none \
           -memory 2048 \
           -cores 2 \
           > /dev/null 2>&1 &
         
         echo "Esperando dispositivo..."
         adb wait-for-device
         
         echo "Esperando boot completo..."
         timeout 300 adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'
         
         echo "Estado del emulador:"
         adb devices -l

     - name: Download APK
       run: |
         mkdir -p ./apps
         wget -O ./apps/gfa22112024.apk https://appsreservamos2024r1.s3.us-east-2.amazonaws.com/gfa22112024.apk

     - name: Setup Appium
       run: |
         npm install -g appium@2.4.1
         appium driver install uiautomator2@3.9.0

         echo "Starting Appium..."
         appium --base-path /wd/hub --log-level info > appium.log 2>&1 &
         sleep 10

         if curl -s http://localhost:4723/wd/hub/status | grep -q "ready"; then
           echo "Appium started successfully"
         else
           echo "Appium failed to start. Logs:"
           cat appium.log
           exit 1
         fi

     - name: Run Tests
       run: |
         npm install
         BRAND=gfa npm run wdio

     - name: Upload Logs
       if: always()
       uses: actions/upload-artifact@v3
       with:
         name: test-logs
         path: |
           appium.log
           emulator.log
           allure-results/